@using ZhihuClone.Core.Models.Notification
@using ZhihuClone.Core.Interfaces
@inject INotificationService NotificationService

@{
    var userId = int.Parse(User.FindFirst("nameid")?.Value ?? "0");
    var unreadCount = await NotificationService.GetUnreadCountAsync(userId);
}

<div class="notification-wrapper" id="notificationWrapper">
    <div class="notification-icon" id="notificationIcon">
        <i class="fas fa-bell"></i>
        @if (unreadCount > 0)
        {
            <span class="notification-badge">@(unreadCount > 99 ? "99+" : unreadCount.ToString())</span>
        }
    </div>

    <div class="notification-dropdown" id="notificationDropdown">
        <div class="notification-header">
            <h3>通知</h3>
            <div class="notification-actions">
                <button class="btn btn-link" id="markAllAsRead">全部标记为已读</button>
                <a href="/notifications" class="btn btn-link">查看全部</a>
            </div>
        </div>
        <div class="notification-list" id="notificationList">
            <!-- 通知列表将通过JavaScript动态加载 -->
        </div>
    </div>
</div>

<style>
.notification-wrapper {
    position: relative;
    display: inline-block;
}

.notification-icon {
    cursor: pointer;
    padding: 8px;
    position: relative;
}

.notification-badge {
    position: absolute;
    top: 0;
    right: 0;
    background-color: #f52443;
    color: white;
    border-radius: 10px;
    padding: 2px 6px;
    font-size: 12px;
    min-width: 18px;
    text-align: center;
}

.notification-dropdown {
    display: none;
    position: absolute;
    right: 0;
    top: 100%;
    width: 360px;
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
    z-index: 1000;
}

.notification-header {
    padding: 12px 16px;
    border-bottom: 1px solid #f0f0f0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.notification-header h3 {
    margin: 0;
    font-size: 16px;
    font-weight: 600;
}

.notification-actions {
    display: flex;
    gap: 8px;
}

.notification-list {
    max-height: 400px;
    overflow-y: auto;
}

.notification-item {
    padding: 12px 16px;
    border-bottom: 1px solid #f0f0f0;
    cursor: pointer;
    transition: background-color 0.2s;
}

.notification-item:hover {
    background-color: #f9f9f9;
}

.notification-item.unread {
    background-color: #f0f7ff;
}

.notification-item.unread:hover {
    background-color: #e6f3ff;
}

.notification-content {
    margin-bottom: 4px;
}

.notification-meta {
    font-size: 12px;
    color: #8590a6;
}

.notification-empty {
    padding: 32px 16px;
    text-align: center;
    color: #8590a6;
}

/* 深色模式样式 */
@@media (prefers-color-scheme: dark) {
    .notification-dropdown {
        background: #1a1a1a;
        border: 1px solid #2d2d2d;
    }

    .notification-header {
        border-bottom-color: #2d2d2d;
    }

    .notification-item {
        border-bottom-color: #2d2d2d;
    }

    .notification-item:hover {
        background-color: #2d2d2d;
    }

    .notification-item.unread {
        background-color: #213547;
    }

    .notification-item.unread:hover {
        background-color: #2a4257;
    }
}
</style> 